common {
  rest {
    ctrl.server.ip = "127.0.0.1"
    ctrl.server.port = "10443"

    server.port = "8443"
    trust.store = "/tmp/ssl-core.jks"
    new.ctrl.cert = "/etc/neuvector/certs/ssl-cert.pem"
    new.ctrl.key = "/etc/neuvector/certs/ssl-cert.key"
    new.cert = "/etc/neuvector/certs/ssl-cert.pem"
    new.key = "/etc/neuvector/certs/ssl-cert.key"
  }

  cassandra {
    //remote cassandra hosts
    user = ""
    password = ""
    test.mode = false
    concurrency = 4
    contact.points = "127.0.0.1"
    keySpace = "dev"
    table.node = "node"
    table.event = "event"
    table.conversation = "conversation"
    table.conversationHistory = "conversation_history"
    ttl = 30
    page.size = 25
    record.limit = 100
  }

  kafka {
    zookeeper = "10.1.0.29:32792"
    partition.num = 1
    event.group = "storeGroup"
    event.topic = "events"
    threat.group = "storeGroup"
    threat.topic = "threats"
    conversation.group = "storeGroup"
    conversation.topic = "conversations"

    producer {
      metadata.broker.list = ["10.1.0.29:32793","10.1.0.29:32794","10.1.0.29:32795"]
      serializer.class = "kafka.serializer.StringEncoder"
      batch.size = 20
    }
  }

  product {
    manager.version=interim/master.xxxx
    eula.oem.appsafe = false
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s
}

ssl.spray.can {
  server {
    ssl-encryption = on
    bind-timeout = 120s
    idle-timeout = 180s
    request-timeout = 120s
    remote-address-header = on
    verbose-error-messages = off
    verbose-error-logging = on
    request-chunk-aggregation-limit = 0
    max-encryption-chunk-size = 10m
    server-header = ""
    parsing {
      max-content-length = 50m
      max-chunk-size = 30m
      incoming-auto-chunking-threshold-size = infinite
      header-cache {
        default = 0
      }
    }
  }
  client = ${spray.can.client}
}

noneSsl.spray.can {
  server {
    ssl-encryption = off
    bind-timeout = 120s
    idle-timeout = 180s
    request-timeout = 120s
    remote-address-header = on
    verbose-error-messages = off
    verbose-error-logging = on
    request-chunk-aggregation-limit = 0
    max-encryption-chunk-size = 10m
    parsing {
      max-content-length = 50m
      max-chunk-size = 30m
      incoming-auto-chunking-threshold-size = infinite
      header-cache {
        default = 0
      }
    }
  }
  client = ${spray.can.client}
}

spray.can {
  client {
    response-chunk-aggregation-limit = 30m
    max-encryption-chunk-size = 10m
    idle-timeout = 180s
    request-timeout = 120s
    connecting-timeout = 100s
    parsing {
      max-content-length = 50m
      max-chunk-size = 30m
      incoming-auto-chunking-threshold-size = infinite
    }
  }
}
