import { Component, OnInit, Input } from '@angular/core';
import { AuthUtilsService } from '@common/utils/auth.utils';
import { DashboardService } from '@services/dashboard.service';
import { MapConstant } from '@common/constants/map.constant';
import { GlobalVariable } from '@common/variables/global.variable';
import { ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-vulnerability-instruction',
  templateUrl: './vulnerability-instruction.component.html',
  styleUrls: ['./vulnerability-instruction.component.scss'],
})
export class VulnerabilityInstructionComponent implements OnInit {
  @Input() details: any;
  @Input() isAutoScanOn: boolean = false;

  isAutoScanAuthorized!: boolean;

  get isRemote() {
    return GlobalVariable.isRemote;
  }

  constructor(
    private activatedRoute: ActivatedRoute,
    private authUtilsService: AuthUtilsService,
    private dashboardService: DashboardService
  ) {}

  ngOnInit(): void {
    this.isAutoScanAuthorized =
      this.authUtilsService.getDisplayFlag('runtime_scan') &&
      !this.authUtilsService.userPermission.isNamespaceUser;
  }

  updateRouteData() {
    this.activatedRoute.data.subscribe(data => {
      data['details'] = this.details;
    });
  }

  turnOnAutoScan = () => {
    this.dashboardService.setAutoScan(true).subscribe(
      () => {
        this.details.isAutoScanOn = true;
        this.updateRouteData();
      },
      error => {
        if (MapConstant.USER_TIMEOUT.indexOf(error.status) < 0) {
          console.log(error.data);
          setTimeout(() => {
            this.isAutoScanOn = false;
            this.details.isAutoScanOn = this.isAutoScanOn;
            this.updateRouteData();
          }, 2000);
        }
      }
    );
  };
}
