// Generated by ScalaTS 0.5.9: https://scala-ts.github.io/scala-ts/

import { Array, isArray } from './Array';
import { DlpRule, isDlpRule } from './DlpRule';

export interface DlpSensorConfig {
  name: string;
  comment?: string;
  change?: ReadonlyArray<DlpRule>;
  delete?: ReadonlyArray<DlpRule>;
  rules?: ReadonlyArray<DlpRule>;
  predefine?: boolean;
  prerules?: Array;
}

export function isDlpSensorConfig(v: any): v is DlpSensorConfig {
  return (
    typeof v['name'] === 'string' &&
    (!v['comment'] || typeof v['comment'] === 'string') &&
    (!v['change'] ||
      (Array.isArray(v['change']) &&
        v['change'].every(elmt => elmt && isDlpRule(elmt)))) &&
    (!v['delete'] ||
      (Array.isArray(v['delete']) &&
        v['delete'].every(elmt => elmt && isDlpRule(elmt)))) &&
    (!v['rules'] ||
      (Array.isArray(v['rules']) &&
        v['rules'].every(elmt => elmt && isDlpRule(elmt)))) &&
    (!v['predefine'] || typeof v['predefine'] === 'boolean') &&
    (!v['prerules'] || (v['prerules'] && isArray(v['prerules'])))
  );
}
