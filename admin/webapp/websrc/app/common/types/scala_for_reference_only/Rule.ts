// Generated by ScalaTS 0.5.9: https://scala-ts.github.io/scala-ts/

import { Array, isArray } from './Array';

export interface Rule {
  id?: number;
  comment?: string;
  from: string;
  to: string;
  applications?: Array;
  ports?: string;
  action: string;
  learned: boolean;
  cfg_type?: string;
  disable: boolean;
}

export function isRule(v: any): v is Rule {
  return (
    (!v['id'] || typeof v['id'] === 'number') &&
    (!v['comment'] || typeof v['comment'] === 'string') &&
    typeof v['from'] === 'string' &&
    typeof v['to'] === 'string' &&
    (!v['applications'] || (v['applications'] && isArray(v['applications']))) &&
    (!v['ports'] || typeof v['ports'] === 'string') &&
    typeof v['action'] === 'string' &&
    typeof v['learned'] === 'boolean' &&
    (!v['cfg_type'] || typeof v['cfg_type'] === 'string') &&
    typeof v['disable'] === 'boolean'
  );
}
