// Generated by ScalaTS 0.5.9: https://scala-ts.github.io/scala-ts/

import {
  VulnerabilityExploitRisk,
  isVulnerabilityExploitRisk,
} from './VulnerabilityExploitRisk';

export interface ScoreInput {
  vulnerabilityExploitRisk: VulnerabilityExploitRisk;
  serviceConnectionRisk: Error | ServiceConnectionRisk;
  ingressEgressRisk: Error | IngressEgressRisk;
  hasPrivilegedContainer: Error | boolean;
  hasRunAsRoot: Error | boolean;
  hasAdmissionRules: Error | boolean;
  isNewServiceDiscover: Error | boolean;
  totalRunningPods: Error | number;
  domains: Error | Array;
}

export function isScoreInput(v: any): v is ScoreInput {
  return (
    v['vulnerabilityExploitRisk'] &&
    isVulnerabilityExploitRisk(v['vulnerabilityExploitRisk']) &&
    ((v['serviceConnectionRisk'] && isError(v['serviceConnectionRisk'])) ||
      (v['serviceConnectionRisk'] &&
        isServiceConnectionRisk(v['serviceConnectionRisk']))) &&
    ((v['ingressEgressRisk'] && isError(v['ingressEgressRisk'])) ||
      (v['ingressEgressRisk'] &&
        isIngressEgressRisk(v['ingressEgressRisk']))) &&
    ((v['hasPrivilegedContainer'] && isError(v['hasPrivilegedContainer'])) ||
      typeof v['hasPrivilegedContainer'] === 'boolean') &&
    ((v['hasRunAsRoot'] && isError(v['hasRunAsRoot'])) ||
      typeof v['hasRunAsRoot'] === 'boolean') &&
    ((v['hasAdmissionRules'] && isError(v['hasAdmissionRules'])) ||
      typeof v['hasAdmissionRules'] === 'boolean') &&
    ((v['isNewServiceDiscover'] && isError(v['isNewServiceDiscover'])) ||
      typeof v['isNewServiceDiscover'] === 'boolean') &&
    ((v['totalRunningPods'] && isError(v['totalRunningPods'])) ||
      typeof v['totalRunningPods'] === 'number') &&
    ((v['domains'] && isError(v['domains'])) ||
      (v['domains'] && isArray(v['domains'])))
  );
}
