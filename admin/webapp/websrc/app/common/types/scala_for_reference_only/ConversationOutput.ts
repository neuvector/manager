// Generated by ScalaTS 0.5.9: https://scala-ts.github.io/scala-ts/

import {
  ApplicationAnalysis,
  isApplicationAnalysis,
} from './ApplicationAnalysis';
import { Array, isArray } from './Array';

export interface ConversationOutput {
  exposureModeMap: { [key: string]: number };
  exposureThreat: number;
  exposureViolation: number;
  ingressConversations: Array;
  egressConversations: Array;
  applicationsInPolicy2: ReadonlyArray<[string, ApplicationAnalysis]>;
}

export function isConversationOutput(v: any): v is ConversationOutput {
  return (
    typeof v['exposureModeMap'] == 'object' &&
    Object.keys(v['exposureModeMap']).every(
      key =>
        typeof key === 'string' && typeof v['exposureModeMap'][key] === 'number'
    ) &&
    typeof v['exposureThreat'] === 'number' &&
    typeof v['exposureViolation'] === 'number' &&
    v['ingressConversations'] &&
    isArray(v['ingressConversations']) &&
    v['egressConversations'] &&
    isArray(v['egressConversations']) &&
    Array.isArray(v['applicationsInPolicy2']) &&
    v['applicationsInPolicy2'].every(
      elmt =>
        Array.isArray(elmt) &&
        elmt.length == 2 &&
        typeof elmt[0] === 'string' &&
        elmt[1] &&
        isApplicationAnalysis(elmt[1])
    )
  );
}
